import os
from visual_indexer import VisualIndexer
from audio_extractor import AudioIndexer
import config


def main():
    """
    Ch·∫°y to√†n b·ªô qu√° tr√¨nh sau:
    1. B√≥c t√°ch audio t·ª´ video/audio files.
    2. Index h√¨nh ·∫£nh tƒ©nh v√† c√°c frame tr√≠ch xu·∫•t t·ª´ video.
    """
    print("=" * 60)
    print("üöÄ STARTING MULTIMODAL INDEXING PROCESS üöÄ")
    print("=" * 60)

    # ƒê·∫£m b·∫£o c√°c th∆∞ m·ª•c c·∫ßn thi·∫øt t·ªìn t·∫°i
    os.makedirs(config.DATA_DIR, exist_ok=True)
    os.makedirs(config.OUTPUT_DIR, exist_ok=True)
    os.makedirs(config.INDEX_DIR, exist_ok=True)
    os.makedirs(config.TRANSCRIPT_DIR, exist_ok=True)
    os.makedirs(config.FRAME_DIR, exist_ok=True)

    # --- B∆∞·ªõc 1: Audio Indexing ---
    print("\n" + "-" * 20 + " STEP 1: AUDIO TRANSCRIPTION " + "-" * 20)
    audio_indexer = AudioIndexer(model_id=config.WHISPER_MODEL_ID)
    audio_indexer.transcribe_media_from_directory(
        media_directory=config.DATA_DIR, output_directory=config.TRANSCRIPT_DIR
    )
    print("-" * 60)
    print("‚úÖ Audio transcription completed.")

    # --- B∆∞·ªõc 2: Visual Indexing ---
    print(
        "\n" + "-" * 20 + " STEP 2: VISUAL INDEXING (Images & Video Frames) " + "-" * 20
    )
    visual_indexer = VisualIndexer(model_id=config.CLIP_MODEL_ID)
    visual_indexer.create_index_from_directory(
        data_directory=config.DATA_DIR,
        output_index_file=config.VISUAL_INDEX_FILE,
        output_mapping_file=config.MEDIA_DATA_MAPPING_FILE,
        index_type=config.FAISS_INDEX_TYPE,
    )
    print("-" * 60)
    print("‚úÖ Visual indexing completed.")

    print("\n" + "=" * 60)
    print("üéâüéâüéâ ALL INDEXING PROCESSES COMPLETED! üéâüéâüéâ")
    print("You can now start the API server by running:")
    print("   python -m src.api")
    print("=" * 60)


if __name__ == "__main__":
    main()
